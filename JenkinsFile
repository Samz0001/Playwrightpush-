pipeline {
    agent any

    stages {
        stage('Checkout Code') {
            steps {
                // Assuming 'main' is the correct branch and URL
                git branch: 'main', url: 'https://github.com/Samz0001/Playwrightpush-.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "Building Playwright Docker image..."
                    // Assuming Dockerfile is in the root of the workspace
                    // Use 'sh' if the Jenkins agent is Linux-based, 'bat' if Windows-based
                    bat "docker build -t playwright-tests ." 
                }
            }
        }

        stage('Run Playwright Tests in Docker') {
            steps {
                script {
                    echo "Running tests inside Playwright Docker container..."
                    // ðŸš¨ CRITICAL FIX: The command must mount the ENTIRE workspace and execute the 'npx playwright test' command.
                    // -e CI=true: This tells Playwright to use the CI settings (headless, 'open: never').
                    // -v ${WORKSPACE}:/app: This mounts the entire Jenkins workspace to the container's '/app' folder.
                    // /bin/sh -c "...": Executes the test command within the container.
                    bat """
                        docker run --rm ^
                        -e CI=true ^
                        -v "${WORKSPACE}":/app ^
                        playwright-tests /bin/sh -c "npm install && npx playwright test"
                    """
                    
                    // Note: If your agent is Linux, replace 'bat' with 'sh' and remove '^' line continuations.
                }
            }
        }

        // Removed 'Example Test 2' since it refers to a specific local path which won't work in CI
    }

    post {
        always {
            echo "Publishing Playwright HTML Report..."
            // âœ… Publish HTML report to Jenkins (requires HTML Publisher Plugin)
            publishHTML(target: [
                reportDir: 'playwright-report',
                reportFiles: 'index.html',
                reportName: 'Playwright HTML Report',
                keepAll: true,
                alwaysLinkToLastBuild: true,
                allowMissing: false
            ])
            
            echo "Publishing Allure Report..."
            // ðŸš¨ NEW STEP: Publish Allure report (requires Allure Plugin)
            // Assumes allure results are in 'allure-results' folder
            allure report: 'allure-results', source: 'allure-results', includeProperties: true, cleanResults: true
            

            echo "Archiving Playwright Artifacts (traces, videos, screenshots)..."
            // Archive the entire reports directory for download/inspection
            archiveArtifacts artifacts: 'playwright-report/**, allure-results/**', fingerprint: true

            echo "Cleaning up workspace..."
            cleanWs()
        }
    }
}
